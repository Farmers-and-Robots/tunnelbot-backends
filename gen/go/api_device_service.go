/*
 * Tunnelbot - OpenAPI 3.0
 *
 * This is the API specification for the tunnelbot backend.
 *
 * API version: 1
 * Contact: info@farmersandrobots.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// DeviceApiService is a service that implents the logic for the DeviceApiServicer
// This service should implement the business logic for every endpoint for the DeviceApi API. 
// Include any external packages or services that will be required by this service.
type DeviceApiService struct {
}

// NewDeviceApiService creates a default api service
func NewDeviceApiService() DeviceApiServicer {
	return &DeviceApiService{}
}

// AddDevice - Add a new device to the db
func (s *DeviceApiService) AddDevice(ctx context.Context, device Device) (ImplResponse, error) {
	// TODO - update AddDevice with the required logic for this service method.
	// Add api_device_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Device{}) or use other options such as http.Ok ...
	//return Response(200, Device{}), nil

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddDevice method not implemented")
}

// DeleteDevice - Deletes a device
func (s *DeviceApiService) DeleteDevice(ctx context.Context, deviceId int64, apiKey string) (ImplResponse, error) {
	// TODO - update DeleteDevice with the required logic for this service method.
	// Add api_device_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteDevice method not implemented")
}

// GetDeviceById - Find device by id
func (s *DeviceApiService) GetDeviceById(ctx context.Context, deviceId int64) (ImplResponse, error) {
	// TODO - update GetDeviceById with the required logic for this service method.
	// Add api_device_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Device{}) or use other options such as http.Ok ...
	//return Response(200, Device{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetDeviceById method not implemented")
}

// UpdateDevice - Update an existing device
func (s *DeviceApiService) UpdateDevice(ctx context.Context, device Device) (ImplResponse, error) {
	// TODO - update UpdateDevice with the required logic for this service method.
	// Add api_device_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Device{}) or use other options such as http.Ok ...
	//return Response(200, Device{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateDevice method not implemented")
}

