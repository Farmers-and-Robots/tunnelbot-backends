/*
 * Tunnelbot - OpenAPI 3.0
 *
 * This is the API specification for the tunnelbot backend.
 *
 * API version: 1
 * Contact: info@farmersandrobots.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"errors"
	"net/http"
)

// TunnelApiService is a service that implents the logic for the TunnelApiServicer
// This service should implement the business logic for every endpoint for the TunnelApi API.
// Include any external packages or services that will be required by this service.
type TunnelApiService struct {
}

// NewTunnelApiService creates a default api service
func NewTunnelApiService() TunnelApiServicer {
	return &TunnelApiService{}
}

// AddTunnel - Add a new tunnel to the db
func (s *TunnelApiService) AddTunnel(ctx context.Context, tunnel Tunnel) (ImplResponse, error) {
	// TODO - update AddTunnel with the required logic for this service method.
	// Add api_tunnel_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Tunnel{}) or use other options such as http.Ok ...
	//return Response(200, Tunnel{}), nil

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddTunnel method not implemented")
}

// DeleteTunnel - Deletes a tunnel
func (s *TunnelApiService) DeleteTunnel(ctx context.Context, tunnelId int64, apiKey string) (ImplResponse, error) {
	// TODO - update DeleteTunnel with the required logic for this service method.
	// Add api_tunnel_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteTunnel method not implemented")
}

// GetTunnelById - Find tunnel by id
func (s *TunnelApiService) GetTunnelById(ctx context.Context, tunnelId int64) (ImplResponse, error) {
	// TODO - update GetTunnelById with the required logic for this service method.
	// Add api_tunnel_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Tunnel{}) or use other options such as http.Ok ...
	//return Response(200, Tunnel{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTunnelById method not implemented")
}

// GetTunnels - Return the tunnels on a farm
func (s *TunnelApiService) GetTunnels(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetTunnels with the required logic for this service method.
	// Add api_tunnel_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Tunnel{}) or use other options such as http.Ok ...
	//return Response(200, []Tunnel{}), nil

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetTunnels method not implemented")
}

// UpdateTunnel - Update an existing tunnel
func (s *TunnelApiService) UpdateTunnel(ctx context.Context, tunnel Tunnel) (ImplResponse, error) {
	// TODO - update UpdateTunnel with the required logic for this service method.
	// Add api_tunnel_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Tunnel{}) or use other options such as http.Ok ...
	//return Response(200, Tunnel{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	//TODO: Uncomment the next line to return response Response(405, {}) or use other options such as http.Ok ...
	//return Response(405, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateTunnel method not implemented")
}
