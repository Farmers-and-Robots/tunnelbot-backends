/*
 * Tunnelbot - OpenAPI 3.0
 *
 * This is the API specification for the tunnelbot backend.
 *
 * API version: 1
 * Contact: info@farmersandrobots.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// DeviceCategory the model 'DeviceCategory'
type DeviceCategory string

// List of DeviceCategory
const (
	CURTAIN DeviceCategory = "curtain"
	HEATING DeviceCategory = "heating"
	IRRIGATION DeviceCategory = "irrigation"
	WEATHER DeviceCategory = "weather"
	LIGHTING DeviceCategory = "lighting"
	FAN DeviceCategory = "fan"
	OTHER DeviceCategory = "other"
)

func (v *DeviceCategory) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DeviceCategory(value)
	for _, existing := range []DeviceCategory{ "curtain", "heating", "irrigation", "weather", "lighting", "fan", "other",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DeviceCategory", value)
}

// Ptr returns reference to DeviceCategory value
func (v DeviceCategory) Ptr() *DeviceCategory {
	return &v
}

type NullableDeviceCategory struct {
	value *DeviceCategory
	isSet bool
}

func (v NullableDeviceCategory) Get() *DeviceCategory {
	return v.value
}

func (v *NullableDeviceCategory) Set(val *DeviceCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceCategory(val *DeviceCategory) *NullableDeviceCategory {
	return &NullableDeviceCategory{value: val, isSet: true}
}

func (v NullableDeviceCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

